if 
elif 
else 
while 
for 
continue 
break
return
int 
float
bool
str
char
const 
def
true
false
with 
value
chance
print
input
pipeline
using
extension
trait
assert
module
delegate

#-------------------------
#Arithmetic Operators
+
-
*
/
~
%
^
#-------------------------
#Assignment Operators
=
+=
-=
*-
/=
~=
%=
#-------------------------
#Unary Operators
+
-
++
--
#-------------------------
#Logical Operators
!
||
&&
#-------------------------
#Relational Operators
==
!=
<
>
<=
>=
#-------------------------

<<<<<<< Updated upstream
=======
# Keywords, Reserved Words and Noise Words
if 
elif 
else 
while 
for 
continue 
break
return
int 
float
bool
str
char
const 
def
with 
value
chance
print
input
# Reserved Words
using
extension
module
true
false
# Noise Words
extern
auto
>>>>>>> Stashed changes

;
,
.
()
{}
[]
#
"""

"""
\n

<<<<<<< Updated upstream
int age = 21
bool isOpen = 1
char middleInitial = "P"
float maxSalary = 10.98
str firstName = "Mark"
=======
#-------------------------
# Sample variables
int age = 21;
bool isOpen = true;
char middleInitial = 'P';
float maxSalary = 10.98;
str firstName = "Mark";
>>>>>>> Stashed changes
